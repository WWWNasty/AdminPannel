{"version":3,"sources":["../../../ReactApp/src/FormDialogObjectType.tsx"],"names":["FormDialogObjectType","props","indexes","setIndexes","React","useState","counter","setCounter","dialogForm","useForm","register","handleSubmit","control","onSubmit","data","console","log","response","fetch","method","headers","credentials","body","JSON","stringify","setObjectTypes","selectOptionsTypes","setOpen","setOpenAlertGreen","setOpenAlertRed","open","handleClickOpen","handleClose","addFriend","prevIndexes","prevCounter","selectOptions","selectedValue","setSelectedValue","TextField","map","index"],"mappings":"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","sourcesContent":["function FormDialogObjectType(props) {\r\n    const [indexes, setIndexes] = React.useState([]);\r\n    const [counter, setCounter] = React.useState(0);\r\n    const dialogForm = useForm();\r\n    const {register, handleSubmit, control} = dialogForm;\r\n\r\n    const onSubmit = data => {\r\n        console.log(data);\r\n        const response = fetch(\"/api/ObjectTypeApi\", {\r\n            method: \"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            credentials: \"include\",\r\n            body: JSON.stringify(data)\r\n        })\r\n        props.setObjectTypes([data, ...props.selectOptionsTypes]);\r\n        setOpen(false);\r\n        setCounter(0);\r\n        if (response) {\r\n            props.setOpenAlertGreen(true);\r\n        } else {\r\n            props.setOpenAlertRed(true);\r\n        }\r\n    };\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const addFriend = () => {\r\n        setIndexes(prevIndexes => [...prevIndexes, counter]);\r\n        setCounter(prevCounter => prevCounter + 1);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} className=\"mt-3 mb-2\">\r\n                Создать новый тип объекта\r\n            </Button>\r\n            <Dialog fullWidth={true} maxWidth={'lg'} open={open} onClose={handleClose}\r\n                    aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Новый тип объекта</DialogTitle>\r\n                <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                    <DialogContent>\r\n                        <div><MySelect autoFocus required name=\"companyId\" selectOptions={props.selectOptions}\r\n                                       selectedValue={props.selectedValue}\r\n                                       form={dialogForm}\r\n                                       setSelectedValue={props.setSelectedValue}\r\n                                       nameSwlect=\"Выберите компанию\"/>\r\n                        </div>\r\n                        <Controller\r\n                            as={TextField}\r\n                            name=\"name\"\r\n                            control={control}\r\n                            defaultValue=\"\"\r\n                            required\r\n                            margin=\"dense\"\r\n                            id=\"standard-required\"\r\n                            label=\"Название\"\r\n                            fullWidth={true}\r\n                        />\r\n                        \r\n                        <div>\r\n                            {indexes.map(index => {\r\n                                return (\r\n                                    <CardProp index={index} setIndexes={setIndexes} setCounter={setCounter} form={dialogForm} registerForm={register}/>\r\n                                );\r\n                            })}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <IconButton color=\"primary\" aria-label=\"add\" onClick={addFriend}>\r\n                                <Icon>add</Icon>\r\n                            </IconButton>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Отмена\r\n                        </Button>\r\n\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Добавить\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}"],"file":"FormDialogObjectType.js"}