{"version":3,"sources":["../../../ReactApp/src/MySelect.tsx"],"names":["ReactHookFormSelect","name","label","control","defaultValue","children","props","labelId","MySelect","classes","useStyles","formControl","nameSwlect","selectedValue","selectEmpty","form","selectOptions","map","item","id"],"mappings":"AAKA,MAAMA,mBAAmB,GAAG,CAAC;AACIC,EAAAA,IADJ;AAEIC,EAAAA,KAFJ;AAGIC,EAAAA,OAHJ;AAIIC,EAAAA,YAJJ;AAKIC,EAAAA,QALJ;AAMI,KAAGC;AANP,CAAD,KAOO;AAC/B,QAAMC,OAAO,GAAI,GAAEN,IAAK,QAAxB;AACA,sBACI,oBAAC,WAAD,EAAiBK,KAAjB,eACI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAEC;AAAhB,KAA0BL,KAA1B,CADJ,eAEI,oBAAC,UAAD;AACI,IAAA,EAAE,eACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,OAAO,EAAEK,OAA1B;AAAmC,MAAA,KAAK,EAAEL;AAA1C,OACKG,QADL,CAFR;AAMI,IAAA,IAAI,EAAEJ,IANV;AAOI,IAAA,OAAO,EAAEE,OAPb;AAQI,IAAA,YAAY,EAAEC;AARlB,IAFJ,CADJ;AAeH,CAxBD;;AA0BA,MAAMI,QAAQ,GAAIF,KAAD,IAAW;AACxB,QAAMG,OAAO,GAAGC,SAAS,EAAzB;AAEA,sBAEI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAG,GAAED,OAAO,CAACE,WAAY;AAA/C,kBACI,oBAAC,mBAAD;AACI,IAAA,IAAI,EAAEL,KAAK,CAACL,IADhB;AAEI,IAAA,KAAK,EAAEK,KAAK,CAACM,UAFjB;AAGI,IAAA,YAAY,EAAEN,KAAK,CAACO,aAHxB;AAII,IAAA,SAAS,EAAEJ,OAAO,CAACK,WAJvB;AAKI,IAAA,OAAO,EAAER,KAAK,CAACS,IAAN,CAAWZ,OALxB,CAMI;;AANJ,KAQKG,KAAK,CAACU,aAAN,EAAqBC,GAArB,CAA0BC,IAAD,iBAAU,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,IAAI,CAACC;AAAtB,KAA2BD,IAAI,CAACjB,IAAhC,CAAnC,KAAwF,EAR7F,CADJ,CAFJ;AAeH,CAlBD","sourcesContent":["interface SelectOption {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nconst ReactHookFormSelect = ({\r\n                                 name,\r\n                                 label,\r\n                                 control,\r\n                                 defaultValue,\r\n                                 children,\r\n                                 ...props\r\n                             }) => {\r\n    const labelId = `${name}-label`;\r\n    return (\r\n        <FormControl {...props}>\r\n            <InputLabel id={labelId}>{label}</InputLabel>\r\n            <Controller\r\n                as={\r\n                    <Select required labelId={labelId} label={label}>\r\n                        {children}\r\n                    </Select>\r\n                }\r\n                name={name}\r\n                control={control}\r\n                defaultValue={defaultValue}\r\n            />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nconst MySelect = (props) => {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n\r\n        <FormControl className={`${classes.formControl} col-md-3 mr-3`}>\r\n            <ReactHookFormSelect\r\n                name={props.name}\r\n                label={props.nameSwlect}\r\n                defaultValue={props.selectedValue}\r\n                className={classes.selectEmpty}\r\n                control={props.form.control}\r\n                //error={!!errors.nome}\r\n            >\r\n                {props.selectOptions?.map((item) => <MenuItem value={item.id}>{item.name}</MenuItem>) ?? []}\r\n            </ReactHookFormSelect>\r\n        </FormControl>\r\n    );\r\n}\r\n"],"file":"MySelect.js"}