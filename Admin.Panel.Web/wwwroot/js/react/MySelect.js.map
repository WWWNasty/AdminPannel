{"version":3,"sources":["../../../ReactApp/src/MySelect.tsx"],"names":["ReactHookFormSelect","name","label","control","defaultValue","children","props","labelId","MySelect","classes","useStyles","useFormContext","formControl","nameSwlect","selectedValue","selectEmpty","selectOptions","map","item","id"],"mappings":"AAKA,MAAMA,mBAAmB,GAAG,CAAC;AACIC,EAAAA,IADJ;AAEIC,EAAAA,KAFJ;AAGIC,EAAAA,OAHJ;AAIIC,EAAAA,YAJJ;AAKIC,EAAAA,QALJ;AAMI,KAAGC;AANP,CAAD,KAOO;AAC/B,QAAMC,OAAO,GAAI,GAAEN,IAAK,QAAxB;AACA,sBACI,oBAAC,WAAD,EAAiBK,KAAjB,eACI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAEC;AAAhB,KAA0BL,KAA1B,CADJ,eAEI,oBAAC,UAAD;AACI,IAAA,EAAE,eACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEK,OAAjB;AAA0B,MAAA,KAAK,EAAEL;AAAjC,OACKG,QADL,CAFR;AAMI,IAAA,IAAI,EAAEJ,IANV;AAOI,IAAA,OAAO,EAAEE,OAPb;AAQI,IAAA,YAAY,EAAEC;AARlB,IAFJ,CADJ;AAeH,CAxBD;;AA0BA,MAAMI,QAAQ,GAAIF,KAAD,IAAW;AACxB,QAAMG,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAM;AAACP,IAAAA;AAAD,MAAYQ,cAAc,EAAhC;AAEA,sBACI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAG,GAAEF,OAAO,CAACG,WAAY;AAA/C,kBACI,oBAAC,mBAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,IAAI,EAAEN,KAAK,CAACL,IAFhB;AAGI,IAAA,KAAK,EAAEK,KAAK,CAACO,UAHjB;AAII,IAAA,YAAY,EAAEP,KAAK,CAACQ,aAJxB;AAKI,IAAA,SAAS,EAAEL,OAAO,CAACM,WALvB;AAMI,IAAA,OAAO,EAAEZ;AANb,KAOKG,KAAK,CAACU,aAAN,EAAqBC,GAArB,CAA0BC,IAAD,iBAAU,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,IAAI,CAACC;AAAtB,KAA2BD,IAAI,CAACjB,IAAhC,CAAnC,KAAwF,EAP7F,CADJ,CADJ;AAaH,CAjBD","sourcesContent":["interface SelectOption {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nconst ReactHookFormSelect = ({\r\n                                 name,\r\n                                 label,\r\n                                 control,\r\n                                 defaultValue,\r\n                                 children,\r\n                                 ...props\r\n                             }) => {\r\n    const labelId = `${name}-label`;\r\n    return (\r\n        <FormControl {...props}>\r\n            <InputLabel id={labelId}>{label}</InputLabel>\r\n            <Controller\r\n                as={\r\n                    <Select labelId={labelId} label={label}>\r\n                        {children}\r\n                    </Select>\r\n                }\r\n                name={name}\r\n                control={control}\r\n                defaultValue={defaultValue}\r\n            />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nconst MySelect = (props) => {\r\n    const classes = useStyles();\r\n    const {control} = useFormContext();\r\n    \r\n    return (\r\n        <FormControl className={`${classes.formControl} col-md-3 mr-3`}>\r\n            <ReactHookFormSelect\r\n                required\r\n                name={props.name}\r\n                label={props.nameSwlect}\r\n                defaultValue={props.selectedValue}\r\n                className={classes.selectEmpty}\r\n                control={control}>\r\n                {props.selectOptions?.map((item) => <MenuItem value={item.id}>{item.name}</MenuItem>) ?? []}\r\n            </ReactHookFormSelect>\r\n        </FormControl>\r\n    );\r\n}\r\n"],"file":"MySelect.js"}