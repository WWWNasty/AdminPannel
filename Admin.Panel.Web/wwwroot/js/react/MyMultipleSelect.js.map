{"version":3,"sources":["../../../ReactApp/src/MyMultipleSelect.tsx"],"names":["MyMultipleSelect","props","getStyles","name","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","useStyles","makeStyles","formControl","margin","spacing","chips","display","flexWrap","chip","noLabel","marginTop","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","classes","handleChange","event","setSelectedValue","target","value","selectedValue","selected","selectOptions","filter","option","id","map","item"],"mappings":"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","sourcesContent":["const MyMultipleSelect = (props) => {\r\n    function getStyles(name, personName, theme) {\r\n        return {\r\n            fontWeight:\r\n                personName.indexOf(name) === -1\r\n                    ? theme.typography.fontWeightRegular\r\n                    : theme.typography.fontWeightMedium,\r\n        };\r\n    }\r\n    const useStyles = makeStyles((theme) => ({\r\n        formControl: {\r\n            margin: theme.spacing(0),\r\n            // minWidth: 120,\r\n            // maxWidth: 300,\r\n        },\r\n        chips: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n        },\r\n        chip: {\r\n            margin: 2,\r\n        },\r\n        noLabel: {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    }));\r\n\r\n    const ITEM_HEIGHT = 48;\r\n    const ITEM_PADDING_TOP = 8;\r\n    const MenuProps = {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                // width: 250,\r\n            },\r\n        },\r\n    };\r\n    const classes = useStyles();\r\n    const handleChange = (event) => {\r\n        props.setSelectedValue(event.target.value);\r\n    };\r\n    return (\r\n        <div>\r\n            <FormControl className={`${classes.formControl} col-md-3`}>\r\n                <InputLabel id=\"demo-mutiple-chip-label\">Chip</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-mutiple-chip-label\"\r\n                    id=\"demo-mutiple-chip\"\r\n                    multiple\r\n                    value={props.selectedValue}\r\n                    onChange={handleChange}\r\n                    input={<Input id=\"select-multiple-chip\" />}\r\n                    renderValue={(selected) => (\r\n                        <div className={classes.chips}>\r\n                            {props.selectOptions.filter(option => selected.indexOf(option.id) > -1).map((option) => (\r\n                                <Chip key={option.id} label={option.name} className={classes.chip} />\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {props.selectOptions.map((item) =>\r\n                        <MenuItem value={item.id}>\r\n                            <Checkbox checked={props.selectedValue.indexOf(item.id) > -1} />\r\n                            <ListItemText primary={item.name} />\r\n                        </MenuItem>)}\r\n\r\n                </Select>\r\n                {/*<ListSubheader>Category 1</ListSubheader>*/}\r\n                {/*<MenuItem value={1}>Option 1</MenuItem>*/}\r\n                {/*<MenuItem value={2}>Option 2</MenuItem>*/}\r\n                {/*<ListSubheader>Category 2</ListSubheader>*/}\r\n                {/*<MenuItem value={3}>Option 3</MenuItem>*/}\r\n                {/*<MenuItem value={4}>Option 4</MenuItem>*/}\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}"],"file":"MyMultipleSelect.js"}