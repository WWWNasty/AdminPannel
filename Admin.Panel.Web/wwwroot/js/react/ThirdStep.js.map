{"version":3,"sources":["../../../ReactApp/src/ThirdStep.tsx"],"names":["ThirdStep","props","form","useFormContext","register","handleSubmit","control","errors","questionaryId","watch","ifQuestionaryCurrentInCompany","objectTypeId","console","log","originObjectTypeId","name","type","TextField","required","maxLength","message","value","validate","selectableAnswersLists","questionaryInputFieldTypes","selectableAnswers"],"mappings":"AAAA,MAAMA,SAAS,GAAIC,KAAD,IAAW;AACzB,QAAMC,IAAI,GAAGC,cAAc,EAA3B;AACA,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA,OAAzB;AAAkCC,IAAAA;AAAlC,MAA4CL,IAAlD;AACA,QAAMM,aAAa,GAAGN,IAAI,CAACO,KAAL,CAAW,IAAX,CAAtB;AACA,QAAMC,6BAA6B,GAAGR,IAAI,CAACO,KAAL,CAAW,+BAAX,CAAtC;AACA,QAAME,YAAY,GAAGT,IAAI,CAACO,KAAL,CAAW,cAAX,CAArB;AACJG,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCZ,KAAK,CAACa,kBAAxC,EAA4D,cAA5D,EAA4EH,YAA5E;AAEI,sBACI,iCACKH,aAAa,IAAI,IAAjB,iBACG,iCACME,6BAA6B,IAAIT,KAAK,CAACa,kBAAN,IAA4BH,YAA9D,gBACG,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,MAA1B;AAA2B,IAAA,OAAO,eAAE,oBAAC,MAAD,OAApC;AAAgD,IAAA,KAAK,EAAC;AAAtD,IADH,gBAEG,oBAAC,UAAD;AACI,IAAA,IAAI,EAAG,QADX;AAEI,IAAA,OAAO,EAAEL,OAFb;AAGI,IAAA,KAAK,EAAE;AAHX,IAHR,CAFR,eAeI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAEC,MAAM,EAAEQ,IAAR,EAAcC,IADzB;AAEI,IAAA,EAAE,EAAEC,SAFR;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,OAAO,EAAEX,OALb;AAMI,IAAA,YAAY,EAAC,EANjB;AAOI,IAAA,QAAQ,MAPZ;AAQI,IAAA,MAAM,EAAC,OARX;AASI,IAAA,EAAE,EAAC,mBATP;AAUI,IAAA,KAAK,EAAC,uFAVV;AAWI,IAAA,SAAS,EAAE,IAXf;AAYI,IAAA,KAAK,EAAE;AAACY,MAAAA,QAAQ,EAAE,IAAX;AAAiBC,MAAAA,SAAS,EAAE;AAACC,QAAAA,OAAO,EAAC,2BAAT;AAAsCC,QAAAA,KAAK,EAAC;AAA5C,OAA5B;AAA8EC,MAAAA,QAAQ,EAAE;AAAxF,KAZX;AAaI,IAAA,UAAU,EAAEf,MAAM,EAAEQ,IAAR,EAAcK;AAb9B,IAfJ,eA+BI,oBAAC,kBAAD;AACI,IAAA,IAAI,EAAElB,IADV;AAEI,IAAA,sBAAsB,EAAED,KAAK,CAACsB,sBAFlC;AAGI,IAAA,0BAA0B,EAAEtB,KAAK,CAACuB,0BAHtC;AAII,IAAA,iBAAiB,EAAEvB,KAAK,CAACwB;AAJ7B,IA/BJ,CADJ;AAwCH,CAhDD","sourcesContent":["const ThirdStep = (props) => {\r\n    const form = useFormContext();\r\n    const {register, handleSubmit, control, errors} = form;\r\n    const questionaryId = form.watch('id');\r\n    const ifQuestionaryCurrentInCompany = form.watch('ifQuestionaryCurrentInCompany');\r\n    const objectTypeId = form.watch('objectTypeId');\r\nconsole.log(\"originObjectTypeId\", props.originObjectTypeId, \"objectTypeId\", objectTypeId);\r\n\r\n    return (\r\n        <div>\r\n            {questionaryId != null &&\r\n                <div>\r\n                    {(ifQuestionaryCurrentInCompany && props.originObjectTypeId == objectTypeId)?\r\n                        <FormControlLabel disabled control={<Switch />} label=\"Анкета не активна\" />:\r\n                        <FormSwitch\r\n                            name={`isUsed`}\r\n                            control={control}\r\n                            label={\"Анкета активна\"}\r\n                        />\r\n                    }\r\n                </div>\r\n                    \r\n            }\r\n\r\n            <Controller\r\n                error={errors?.name?.type}\r\n                as={TextField}\r\n                autoFocus\r\n                name=\"name\"\r\n                control={control}\r\n                defaultValue=\"\"\r\n                required\r\n                margin=\"dense\"\r\n                id=\"standard-required\"\r\n                label=\"Название анкеты\"\r\n                fullWidth={true}\r\n                rules={{required: true, maxLength: {message:'Максимально символов: 250', value:250}, validate: true}}\r\n                helperText={errors?.name?.message}\r\n            />\r\n            \r\n            <DraggableComponent\r\n                form={form}\r\n                selectableAnswersLists={props.selectableAnswersLists}\r\n                questionaryInputFieldTypes={props.questionaryInputFieldTypes}\r\n                selectableAnswers={props.selectableAnswers}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n"],"file":"ThirdStep.js"}