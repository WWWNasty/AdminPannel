{"version":3,"sources":["../../../ReactApp/src/FormDialogObject.tsx"],"names":["FormDialogObject","props","dialogForm","useForm","form","useFormContext","selectedObjectTypeId","watch","register","handleSubmit","control","reset","errors","setError","onSubmit","data","objectTypeId","selectedObjectPropertyValues","forEach","prop","objectPropertyId","Number","response","fetch","method","headers","credentials","body","JSON","stringify","ok","result","json","setOpenAlertGreen","selectedObjectype","questionaryObjects","push","setOpen","status","type","message","setOpenAlertRed","open","React","useState","handleClickOpen","handleClose","objectType","objectTypes","find","o","id","name","TextField","required","maxLength","value","validate","code","description","color","objectProperties","map","item","index"],"mappings":"AAIA,MAAMA,gBAAgB,GAAIC,KAAD,IAAW;AAChC,QAAMC,UAAU,GAAGC,OAAO,EAA1B;AACA,QAAMC,IAAI,GAAGC,cAAc,EAA3B;AACA,QAAMC,oBAAoB,GAAGF,IAAI,CAACG,KAAL,CAAW,cAAX,CAA7B;AACA,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA,OAAzB;AAAkCC,IAAAA,KAAlC;AAAyCC,IAAAA,MAAzC;AAAiDC,IAAAA;AAAjD,MAA6DX,UAAnE;;AAEA,QAAMY,QAAQ,GAAG,MAAMC,IAAN,IAAc;AAC3BA,IAAAA,IAAI,CAACC,YAAL,GAAoBV,oBAApB;AACAS,IAAAA,IAAI,CAACE,4BAAL,EAAmCC,OAAnC,CAA2CC,IAAI,IAAIA,IAAI,CAACC,gBAAL,GAAwBC,MAAM,CAACF,IAAI,CAACC,gBAAN,CAAjF;AAEA,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAAD,EAA8B;AACtDC,MAAAA,MAAM,EAAE,MAD8C;AAEtDC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAF6C;AAGtDC,MAAAA,WAAW,EAAE,SAHyC;AAItDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAed,IAAf;AAJgD,KAA9B,CAA5B;;AAOA,QAAIO,QAAQ,CAACQ,EAAb,EAAiB;AACb,YAAMC,MAAM,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAArB;AACA/B,MAAAA,KAAK,CAACgC,iBAAN,CAAwB,IAAxB;AACAhC,MAAAA,KAAK,CAACiC,iBAAN,CAAwBC,kBAAxB,CAA2CC,IAA3C,CAAgDL,MAAhD;AACA;AACAM,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KAND,MAMO,IAAIf,QAAQ,CAACgB,MAAT,IAAmB,GAAvB,EAA4B;AAC/B,YAAMC,IAAI,GAAG,mBAAb;AACA1B,MAAAA,QAAQ,CAAC,MAAD,EAAS;AAAC0B,QAAAA,IAAD;AAAOC,QAAAA,OAAO,EAAE;AAAhB,OAAT,CAAR;AACH,KAHM,MAGA;AACHvC,MAAAA,KAAK,CAACwC,eAAN,CAAsB,IAAtB;AACH;AACJ,GAvBD;;AAwBA,QAAM,CAACC,IAAD,EAAOL,OAAP,IAAkBM,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;;AACA,QAAMC,eAAe,GAAG,MAAM;AAC1BR,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAMS,WAAW,GAAG,MAAM;AACtBT,IAAAA,OAAO,CAAC,KAAD,CAAP;AACA1B,IAAAA,KAAK;AACR,GAHD;;AAIA,QAAMK,YAAY,GAAGZ,IAAI,CAACG,KAAL,CAAW,cAAX,CAArB;AACA,QAAMwC,UAAU,GAAG9C,KAAK,CAAC+C,WAAN,EAAmBC,IAAnB,CAAwBC,CAAC,IAAIA,CAAC,CAACC,EAAF,IAAQnC,YAArC,CAAnB;AAEA,sBACI,8CACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAA2C,IAAA,OAAO,EAAE6B,eAApD;AAAqE,IAAA,SAAS,EAAC;AAA/E,sHADJ,eAII,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,IAAnB;AAAyB,IAAA,QAAQ,EAAE,IAAnC;AAAyC,IAAA,IAAI,EAAEH,IAA/C;AAAqD,IAAA,OAAO,EAAEI,WAA9D;AACQ,uBAAgB;AADxB,kBAEI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC;AAAhB,2EAFJ,eAGI;AAAM,IAAA,YAAY,EAAC;AAAnB,kBACI,oBAAC,aAAD,qBACI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAElC,MAAM,EAAEwC,IAAR,EAAcb,IADzB;AAEI,IAAA,EAAE,EAAEc,SAFR;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,OAAO,EAAE3C,OALb;AAMI,IAAA,YAAY,EAAC,EANjB;AAOI,IAAA,QAAQ,MAPZ;AAQI,IAAA,MAAM,EAAC,OARX;AASI,IAAA,EAAE,EAAC,mBATP;AAUI,IAAA,KAAK,EAAC,6FAVV;AAWI,IAAA,SAAS,EAAE,IAXf;AAYI,IAAA,KAAK,EAAE;AAAC4C,MAAAA,QAAQ,EAAE,IAAX;AAAiBC,MAAAA,SAAS,EAAE;AAACf,QAAAA,OAAO,EAAC,2BAAT;AAAsCgB,QAAAA,KAAK,EAAC;AAA5C,OAA5B;AAA8EC,MAAAA,QAAQ,EAAE;AAAxF,KAZX;AAaI,IAAA,UAAU,EAAE7C,MAAM,EAAEwC,IAAR,EAAcZ;AAb9B,IADJ,eAiBI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAE5B,MAAM,EAAE8C,IAAR,EAAcnB,IADzB;AAEI,IAAA,EAAE,EAAEc,SAFR;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,OAAO,EAAE3C,OAJb;AAKI,IAAA,YAAY,EAAC,EALjB;AAMI,IAAA,QAAQ,MANZ;AAOI,IAAA,MAAM,EAAC,OAPX;AAQI,IAAA,EAAE,EAAC,mBARP;AASI,IAAA,KAAK,EAAC,oBATV;AAUI,IAAA,SAAS,EAAE,IAVf;AAWI,IAAA,KAAK,EAAE;AAAC4C,MAAAA,QAAQ,EAAE,IAAX;AAAiBC,MAAAA,SAAS,EAAE;AAACf,QAAAA,OAAO,EAAC,0BAAT;AAAqCgB,QAAAA,KAAK,EAAC;AAA3C,OAA5B;AAA4EC,MAAAA,QAAQ,EAAE;AAAtF,KAXX;AAYI,IAAA,UAAU,EAAE7C,MAAM,EAAE8C,IAAR,EAAclB;AAZ9B,IAjBJ,eAgCI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAE5B,MAAM,EAAE+C,WAAR,EAAqBpB,IADhC;AAEI,IAAA,EAAE,EAAEc,SAFR;AAGI,IAAA,IAAI,EAAC,aAHT;AAII,IAAA,OAAO,EAAE3C,OAJb;AAKI,IAAA,YAAY,EAAC,EALjB;AAMI,IAAA,QAAQ,MANZ;AAOI,IAAA,MAAM,EAAC,OAPX;AAQI,IAAA,EAAE,EAAC,2BARP;AASI,IAAA,KAAK,EAAC,kDATV;AAUI,IAAA,SAAS,EAAE,IAVf;AAWI,IAAA,SAAS,MAXb;AAYI,IAAA,IAAI,EAAE,CAZV;AAaI,IAAA,KAAK,EAAE;AAAC4C,MAAAA,QAAQ,EAAE,IAAX;AAAiBC,MAAAA,SAAS,EAAE;AAACf,QAAAA,OAAO,EAAC,2BAAT;AAAsCgB,QAAAA,KAAK,EAAC;AAA5C,OAA5B;AAA8EC,MAAAA,QAAQ,EAAE;AAAxF,KAbX;AAcI,IAAA,UAAU,EAAE7C,MAAM,EAAE+C,WAAR,EAAqBnB;AAdrC,IAhCJ,eAiDI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAwC,IAAA,KAAK,EAAE;AAACoB,MAAAA,KAAK,EAAE;AAAR;AAA/C,uLAAqGb,UAAU,CAACK,IAAhH,SAjDJ,EAkDKnD,KAAK,CAACiC,iBAAN,CAAwB2B,gBAAxB,EAA0CC,GAA1C,CAA8C,CAACC,IAAD,EAAOC,KAAP,kBAC3C,8CACI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAEpD,MAAM,EAAEK,4BAAR,GAAuC+C,KAAvC,GAA+CR,KAA/C,EAAsDjB,IADjE;AAEI,IAAA,EAAE,EAAEc,SAFR;AAGI,IAAA,IAAI,EAAG,gCAA+BW,KAAM,SAHhD;AAII,IAAA,OAAO,EAAEtD,OAJb;AAKI,IAAA,YAAY,EAAC,EALjB;AAMI,IAAA,QAAQ,MANZ;AAOI,IAAA,MAAM,EAAC,OAPX;AAQI,IAAA,EAAE,EAAC,mBARP;AASI,IAAA,KAAK,EAAEqD,IAAI,CAACX,IAThB;AAUI,IAAA,SAAS,EAAE,IAVf;AAWI,IAAA,KAAK,EAAE;AAACE,MAAAA,QAAQ,EAAE,IAAX;AAAiBC,MAAAA,SAAS,EAAE;AAACf,QAAAA,OAAO,EAAC,2BAAT;AAAsCgB,QAAAA,KAAK,EAAC;AAA5C,OAA5B;AAA8EC,MAAAA,QAAQ,EAAE;AAAxF,KAXX;AAYI,IAAA,UAAU,EAAE7C,MAAM,EAAEK,4BAAR,GAAuC+C,KAAvC,GAA+CR,KAA/C,EAAsDhB;AAZtE,IADJ,eAeI;AAAO,IAAA,IAAI,EAAC,QAAZ;AACO,IAAA,GAAG,EAAEhC,QADZ;AAEO,IAAA,IAAI,EAAG,gCAA+BwD,KAAM,oBAFnD;AAGO,IAAA,KAAK,EAAED,IAAI,CAACZ;AAHnB,IAfJ,CADH,CAlDL,CADJ,eA4EI,oBAAC,aAAD,qBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEL,WAAjB;AAA8B,IAAA,KAAK,EAAC;AAApC,4CADJ,eAII,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAErC,YAAY,CAACK,QAAD,CAA7B;AAAyC,IAAA,KAAK,EAAC;AAA/C,wDAJJ,CA5EJ,CAHJ,CAJJ,CADJ;AAgGH,CA1ID","sourcesContent":["interface TypeObjectProperties extends SelectOption {\r\n    questionaryObjectTypeId: number;\r\n}\r\n\r\nconst FormDialogObject = (props) => {\r\n    const dialogForm = useForm();\r\n    const form = useFormContext();\r\n    const selectedObjectTypeId = form.watch('objectTypeId');\r\n    const {register, handleSubmit, control, reset, errors, setError} = dialogForm;\r\n\r\n    const onSubmit = async data => {\r\n        data.objectTypeId = selectedObjectTypeId;\r\n        data.selectedObjectPropertyValues?.forEach(prop => prop.objectPropertyId = Number(prop.objectPropertyId));\r\n\r\n        const response = await fetch(\"/api/QuestionaryObjectApi\", {\r\n            method: \"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            credentials: \"include\",\r\n            body: JSON.stringify(data)\r\n        })\r\n\r\n        if (response.ok) {\r\n            const result = await response.json();\r\n            props.setOpenAlertGreen(true);\r\n            props.selectedObjectype.questionaryObjects.push(result);\r\n            debugger;\r\n            setOpen(false);\r\n        } else if (response.status == 400) {\r\n            const type = 'oneOrMoreRequired';\r\n            setError('code', {type, message: 'Введите уникальный код!'});\r\n        } else {\r\n            props.setOpenAlertRed(true); \r\n        }\r\n    };\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        reset();\r\n    };\r\n    const objectTypeId = form.watch('objectTypeId');\r\n    const objectType = props.objectTypes?.find(o => o.id == objectTypeId);\r\n    \r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} className=\"mt-3 mb-2\">\r\n                Создать новый объект\r\n            </Button>\r\n            <Dialog fullWidth={true} maxWidth={'lg'} open={open} onClose={handleClose}\r\n                    aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Новый объект</DialogTitle>\r\n                <form autoComplete=\"off\">\r\n                    <DialogContent>\r\n                        <Controller\r\n                            error={errors?.name?.type}\r\n                            as={TextField}\r\n                            autoFocus\r\n                            name=\"name\"\r\n                            control={control}\r\n                            defaultValue=\"\"\r\n                            required\r\n                            margin=\"dense\"\r\n                            id=\"standard-required\"\r\n                            label=\"Название объекта\"\r\n                            fullWidth={true}\r\n                            rules={{required: true, maxLength: {message:'Максимально символов: 250', value:250}, validate: true}}\r\n                            helperText={errors?.name?.message}\r\n                        />\r\n\r\n                        <Controller\r\n                            error={errors?.code?.type}\r\n                            as={TextField}\r\n                            name=\"code\"\r\n                            control={control}\r\n                            defaultValue=\"\"\r\n                            required\r\n                            margin=\"dense\"\r\n                            id=\"standard-required\"\r\n                            label=\"Код\"\r\n                            fullWidth={true}\r\n                            rules={{required: true, maxLength: {message:'Максимально символов: 20', value:20}, validate: true}}\r\n                            helperText={errors?.code?.message}\r\n                        />\r\n                        \r\n                        <Controller\r\n                            error={errors?.description?.type}\r\n                            as={TextField}\r\n                            name=\"description\"\r\n                            control={control}\r\n                            defaultValue=\"\"\r\n                            required\r\n                            margin=\"dense\"\r\n                            id=\"standard-multiline-static\"\r\n                            label=\"Описание\"\r\n                            fullWidth={true}\r\n                            multiline\r\n                            rows={4}\r\n                            rules={{required: true, maxLength: {message:'Максимально символов: 500', value:500}, validate: true}}\r\n                            helperText={errors?.description?.message}\r\n                        />\r\n\r\n                        <div className=\"font-weight-light mt-3\" style={{color: '#3f51b5'}}>Заполните свойства типа объекта \"{objectType.name}\": </div>\r\n                        {props.selectedObjectype.objectProperties?.map((item, index) =>\r\n                            <div>\r\n                                <Controller\r\n                                    error={errors?.selectedObjectPropertyValues?.[index]?.value?.type}\r\n                                    as={TextField}\r\n                                    name={`selectedObjectPropertyValues[${index}].value`}\r\n                                    control={control}\r\n                                    defaultValue=\"\"\r\n                                    required\r\n                                    margin=\"dense\"\r\n                                    id=\"standard-required\"\r\n                                    label={item.name}\r\n                                    fullWidth={true}\r\n                                    rules={{required: true, maxLength: {message:'Максимально символов: 250', value:250}, validate: true}}\r\n                                    helperText={errors?.selectedObjectPropertyValues?.[index]?.value?.message}\r\n                                />\r\n                                <input type=\"hidden\"\r\n                                       ref={register}\r\n                                       name={`selectedObjectPropertyValues[${index}].objectPropertyId`}\r\n                                       value={item.id}\r\n                                />\r\n                            </div>\r\n                        )}\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Отмена\r\n                        </Button>\r\n                        <Button onClick={handleSubmit(onSubmit)} color=\"primary\">\r\n                            Добавить\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}"],"file":"FormDialogObject.js"}