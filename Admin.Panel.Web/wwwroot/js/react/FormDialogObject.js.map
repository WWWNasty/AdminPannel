{"version":3,"sources":["../../../ReactApp/src/FormDialogObject.tsx"],"names":["FormDialogObject","props","dialogForm","useForm","form","useFormContext","selectedObjectTypeId","watch","register","handleSubmit","control","onSubmit","data","objectTypeId","selectedObjectPropertyValues","forEach","prop","objectPropertyId","Number","response","fetch","method","headers","credentials","body","JSON","stringify","setObjectTypes","selectOptions","setOpen","setOpenAlertGreen","setOpenAlertRed","open","React","useState","handleClickOpen","handleClose","TextField","selectedObjectype","objectProperties","map","item","index","name","id"],"mappings":"AAIA,MAAMA,gBAAgB,GAAIC,KAAD,IAAW;AAChC,QAAMC,UAAU,GAAGC,OAAO,EAA1B;AACA,QAAMC,IAAI,GAAGC,cAAc,EAA3B;AACA,QAAMC,oBAAoB,GAAGF,IAAI,CAACG,KAAL,CAAW,cAAX,CAA7B;AAEA,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,MAAoCR,UAA1C;;AAEA,QAAMS,QAAQ,GAAGC,IAAI,IAAI;AACrBA,IAAAA,IAAI,CAACC,YAAL,GAAoBP,oBAApB;AAEAM,IAAAA,IAAI,CAACE,4BAAL,CAAkCC,OAAlC,CAA0CC,IAAI,IAAIA,IAAI,CAACC,gBAAL,GAAwBC,MAAM,CAACF,IAAI,CAACC,gBAAN,CAAhF;AAEA,UAAME,QAAQ,GAAGC,KAAK,CAAC,2BAAD,EAA8B;AAChDC,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFuC;AAGhDC,MAAAA,WAAW,EAAE,SAHmC;AAIhDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAed,IAAf;AAJ0C,KAA9B,CAAtB;AAOAX,IAAAA,KAAK,CAAC0B,cAAN,CAAqB,CAACf,IAAD,EAAO,GAAGX,KAAK,CAAC2B,aAAhB,CAArB;AACAC,IAAAA,OAAO,CAAC,KAAD,CAAP;;AACA,QAAIV,QAAJ,EAAc;AACVlB,MAAAA,KAAK,CAAC6B,iBAAN,CAAwB,IAAxB;AACH,KAFD,MAEO;AACH7B,MAAAA,KAAK,CAAC8B,eAAN,CAAsB,IAAtB;AACH;;AAED,WAAO,KAAP;AACH,GArBD;;AAsBA,QAAM,CAACC,IAAD,EAAOH,OAAP,IAAkBI,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC1BN,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAMO,WAAW,GAAG,MAAM;AACtBP,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,sBACI,8CACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAA2C,IAAA,OAAO,EAAEM,eAApD;AAAqE,IAAA,SAAS,EAAC;AAA/E,sHADJ,eAII,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,IAAnB;AAAyB,IAAA,QAAQ,EAAE,IAAnC;AAAyC,IAAA,IAAI,EAAEH,IAA/C;AAAqD,IAAA,OAAO,EAAEI,WAA9D;AACQ,uBAAgB;AADxB,kBAEI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC;AAAhB,2EAFJ,eAGI;AAAM,IAAA,QAAQ,EAAE3B,YAAY,CAACE,QAAD,CAA5B;AAAwC,IAAA,YAAY,EAAC;AAArD,kBACI,oBAAC,aAAD,qBACI,oBAAC,UAAD;AACI,IAAA,EAAE,EAAE0B,SADR;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,OAAO,EAAE3B,OAJb;AAKI,IAAA,YAAY,EAAC,EALjB;AAMI,IAAA,QAAQ,MANZ;AAOI,IAAA,MAAM,EAAC,OAPX;AAQI,IAAA,EAAE,EAAC,mBARP;AASI,IAAA,KAAK,EAAC,kDATV;AAUI,IAAA,SAAS,EAAE;AAVf,IADJ,eAaI,oBAAC,UAAD;AACI,IAAA,EAAE,EAAE2B,SADR;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,OAAO,EAAE3B,OAHb;AAII,IAAA,YAAY,EAAC,EAJjB;AAKI,IAAA,QAAQ,MALZ;AAMI,IAAA,MAAM,EAAC,OANX;AAOI,IAAA,EAAE,EAAC,mBAPP;AAQI,IAAA,KAAK,EAAC,oBARV;AASI,IAAA,SAAS,EAAE;AATf,IAbJ,eAwBI,oBAAC,UAAD;AACI,IAAA,EAAE,EAAE2B,SADR;AAEI,IAAA,IAAI,EAAC,aAFT;AAGI,IAAA,OAAO,EAAE3B,OAHb;AAII,IAAA,YAAY,EAAC,EAJjB;AAKI,IAAA,QAAQ,MALZ;AAMI,IAAA,MAAM,EAAC,OANX;AAOI,IAAA,EAAE,EAAC,2BAPP;AAQI,IAAA,KAAK,EAAC,kDARV;AASI,IAAA,SAAS,EAAE,IATf;AAUI,IAAA,SAAS,MAVb;AAWI,IAAA,IAAI,EAAE;AAXV,IAxBJ,EAsCMT,KAAK,CAACqC,iBAAN,CAAwBC,gBAAxB,EAA0CC,GAA1C,CAA8C,CAACC,IAAD,EAAOC,KAAP,kBAC5C,8CACI,oBAAC,UAAD;AACI,IAAA,EAAE,EAAEL,SADR;AAEI,IAAA,IAAI,EAAG,gCAA+BK,KAAM,SAFhD;AAGI,IAAA,OAAO,EAAEhC,OAHb;AAII,IAAA,YAAY,EAAC,EAJjB;AAKI,IAAA,QAAQ,MALZ;AAMI,IAAA,MAAM,EAAC,OANX;AAOI,IAAA,EAAE,EAAC,mBAPP;AAQI,IAAA,KAAK,EAAE+B,IAAI,CAACE,IARhB;AASI,IAAA,SAAS,EAAE;AATf,IADJ,eAYI;AAAO,IAAA,IAAI,EAAC,QAAZ;AACO,IAAA,GAAG,EAAEnC,QADZ;AAEO,IAAA,IAAI,EAAG,gCAA+BkC,KAAM,oBAFnD;AAGO,IAAA,KAAK,EAAED,IAAI,CAACG;AAHnB,IAZJ,CADF,CAtCN,CADJ,eA6DI,oBAAC,aAAD,qBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAER,WAAjB;AAA8B,IAAA,KAAK,EAAC;AAApC,4CADJ,eAII,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC;AAA5B,wDAJJ,CA7DJ,CAHJ,CAJJ,CADJ;AAiFH,CAxHD","sourcesContent":["interface TypeObjectProperties extends SelectOption {\r\n    questionaryObjectTypeId: number;\r\n}\r\n\r\nconst FormDialogObject = (props) => {\r\n    const dialogForm = useForm();\r\n    const form = useFormContext();\r\n    const selectedObjectTypeId = form.watch('objectTypeId');\r\n\r\n    const {register, handleSubmit, control} = dialogForm;\r\n\r\n    const onSubmit = data => {\r\n        data.objectTypeId = selectedObjectTypeId;\r\n        \r\n        data.selectedObjectPropertyValues.forEach(prop => prop.objectPropertyId = Number(prop.objectPropertyId));\r\n\r\n        const response = fetch(\"/api/QuestionaryObjectApi\", {\r\n            method: \"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            credentials: \"include\",\r\n            body: JSON.stringify(data)\r\n        })\r\n        \r\n        props.setObjectTypes([data, ...props.selectOptions]);\r\n        setOpen(false);\r\n        if (response) {\r\n            props.setOpenAlertGreen(true);\r\n        } else {\r\n            props.setOpenAlertRed(true);\r\n        }\r\n        \r\n        return false;\r\n    };\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} className=\"mt-3 mb-2\">\r\n                Создать новый объект\r\n            </Button>\r\n            <Dialog fullWidth={true} maxWidth={'lg'} open={open} onClose={handleClose}\r\n                    aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Новый объект</DialogTitle>\r\n                <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                    <DialogContent>\r\n                        <Controller\r\n                            as={TextField}\r\n                            autoFocus\r\n                            name=\"name\"\r\n                            control={control}\r\n                            defaultValue=\"\"\r\n                            required\r\n                            margin=\"dense\"\r\n                            id=\"standard-required\"\r\n                            label=\"Название\"\r\n                            fullWidth={true}\r\n                        />\r\n                        <Controller\r\n                            as={TextField}\r\n                            name=\"code\"\r\n                            control={control}\r\n                            defaultValue=\"\"\r\n                            required\r\n                            margin=\"dense\"\r\n                            id=\"standard-required\"\r\n                            label=\"Код\"\r\n                            fullWidth={true}\r\n                        />\r\n                        <Controller\r\n                            as={TextField}\r\n                            name=\"description\"\r\n                            control={control}\r\n                            defaultValue=\"\"\r\n                            required\r\n                            margin=\"dense\"\r\n                            id=\"standard-multiline-static\"\r\n                            label=\"Описание\"\r\n                            fullWidth={true}\r\n                            multiline\r\n                            rows={4}\r\n                        />\r\n\r\n                         {props.selectedObjectype.objectProperties?.map((item, index) =>\r\n                            <div>\r\n                                <Controller\r\n                                    as={TextField}\r\n                                    name={`selectedObjectPropertyValues[${index}].value`}\r\n                                    control={control}\r\n                                    defaultValue=\"\"\r\n                                    required\r\n                                    margin=\"dense\"\r\n                                    id=\"standard-required\"\r\n                                    label={item.name}\r\n                                    fullWidth={true}\r\n                                />\r\n                                <input type=\"hidden\" \r\n                                       ref={register} \r\n                                       name={`selectedObjectPropertyValues[${index}].objectPropertyId`}\r\n                                       value={item.id}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Отмена\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Добавить\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}"],"file":"FormDialogObject.js"}