{"version":3,"sources":["../../../ReactApp/src/App.tsx"],"names":["colors","CssBaseline","ThemeProvider","Typography","Container","makeStyles","createMuiTheme","Box","SvgIcon","Link","Stepper","Step","StepButton","Button","InputLabel","FormControl","FormHelperText","Select","MenuItem","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","Input","Chip","Checkbox","ListItemText","ListSubheader","DialogActions","Card","CardContent","CardActions","FormControlLabel","Icon","List","ListItem","ListItemIcon","IconButton","ListItemSecondaryAction","RootRef","Switch","Accordion","AccordionSummary","AccordionDetails","Theme","createStyles","FormGroup","Slide","StepLabel","Collapse","Snackbar","Tooltip","MaterialUI","DragDropContext","Draggable","Droppable","ReactBeautifulDnd","useState","React","useForm","Controller","useFormContext","FormProvider","useFieldArray","ReactHookForm","console","log","useStyles","theme","root","width","button","marginRight","spacing","backButton","completed","display","instructions","marginTop","marginBottom","getSteps","getStepContent","step","form","questionary","getAllRoute","objectTypes","setObjectTypes","companies","selectableAnswersLists","questionaryInputFieldTypes","selectableAnswers","setObjectTypeId","originObjectTypeId","selectedObjectTypeId","watch","selectedObjectype","find","ot","id","getBasePath","allRouteParts","split","basePath","slice","length","join","trim","HorizontalLabelPositionBelowStepper","props","classes","activeStep","setActiveStep","steps","handleSubmit","clearErrors","handleNext","onSuccess","data","prevActiveStep","handleBack","handleReset","onSubmit","questionaryQuestions","forEach","question","questionaryAnswerOptions","option","selectableAnswerId","Number","response","fetch","method","headers","credentials","body","JSON","stringify","ok","window","location","companyId","company","toString","objectTypeId","objectType","o","objectsIdToChangeType","ifQuestionaryCurrentInCompany","name","color","map","label","App","shouldUnregister","defaultValues","register","setCompanies","setSelectableAnswersLists","setQuestionaryInputFieldTypes","setSelectableAnswers","setCompanyId","setOriginObjectTypeId","useEffect","getSelectOptions","json","selectOptions","objTypes","questionaryObjectTypes","applicationCompanies","companyName","answersList","inputFieldTypes","answers","answer","answerText","selectableAnswersListId","Log","a","renderReact","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","sourcesContent":["﻿declare const MaterialUI;\r\ndeclare const ReactBeautifulDnd;\r\ndeclare const ReactHookForm;\r\ndeclare const yup;\r\n\r\n\r\nconst {\r\n    colors,\r\n    CssBaseline,\r\n    ThemeProvider,\r\n    Typography,\r\n    Container,\r\n    makeStyles,\r\n    createMuiTheme,\r\n    Box,\r\n    SvgIcon,\r\n    Link,\r\n    Stepper,\r\n    Step,\r\n    StepButton,\r\n    Button,\r\n    InputLabel,\r\n    FormControl,\r\n    FormHelperText,\r\n    Select,\r\n    MenuItem,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    TextField,\r\n    Input,\r\n    Chip,\r\n    Checkbox,\r\n    ListItemText,\r\n    ListSubheader,\r\n    DialogActions,\r\n    Card,\r\n    CardContent,\r\n    CardActions,\r\n    FormControlLabel,\r\n    Icon,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    IconButton,\r\n    ListItemSecondaryAction,\r\n    RootRef,\r\n    Switch,\r\n    Accordion,\r\n    AccordionSummary,\r\n    AccordionDetails,\r\n    Theme,\r\n    createStyles,\r\n    FormGroup,\r\n    Slide,\r\n    StepLabel,\r\n    Collapse,\r\n    Snackbar,\r\n    Tooltip\r\n} = MaterialUI;\r\n\r\nconst {DragDropContext, Draggable, Droppable} = ReactBeautifulDnd;\r\nconst {useState} = React;\r\nconst {useForm, Controller, useFormContext, FormProvider, useFieldArray} = ReactHookForm;\r\n\r\n\r\nconsole.log(useFormContext);\r\nconsole.log(FormProvider);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '95%',\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    completed: {\r\n        display: 'inline-block',\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction getSteps() {\r\n    return ['Выбор типа объекта', 'Выбор объекта', 'Создание анкеты'];\r\n}\r\n\r\nfunction getStepContent(step: number,\r\n                        form: any,\r\n                        questionary: any,\r\n                        getAllRoute: string,\r\n                        objectTypes,\r\n                        setObjectTypes,\r\n                        companies,\r\n                        selectableAnswersLists,\r\n                        questionaryInputFieldTypes,\r\n                        selectableAnswers,\r\n                        setObjectTypeId,\r\n                        originObjectTypeId) {\r\n    const selectedObjectTypeId = form.watch('objectTypeId');\r\n    const selectedObjectype = objectTypes.find(ot => ot.id == selectedObjectTypeId)\r\n\r\n    switch (step) {\r\n        case 0:\r\n            return <FirstStep\r\n                setObjectTypeId={setObjectTypeId}\r\n                setObjectTypes={setObjectTypes}\r\n                selectOptionsTypes={objectTypes}\r\n                selectOptionsСompanies={companies}\r\n            />;\r\n        case 1:\r\n            return <SecondStep\r\n                form={form}\r\n                selectOptions={objectTypes}\r\n                selectedObjectype={selectedObjectype}\r\n            />;\r\n        case 2:\r\n            return <ThirdStep\r\n                form={form}\r\n                selectableAnswersLists={selectableAnswersLists}\r\n                questionaryInputFieldTypes={questionaryInputFieldTypes}\r\n                selectableAnswers={selectableAnswers}\r\n                originObjectTypeId={originObjectTypeId}\r\n            />;\r\n        default:\r\n            return 'Unknown step';\r\n    }\r\n}\r\n\r\nfunction getBasePath(getAllRoute: string) {\r\n    const allRouteParts = getAllRoute.split('/');\r\n    const basePath = allRouteParts.slice(0, allRouteParts.length - 2).join('/').trim();\r\n    return basePath;\r\n}\r\n\r\nfunction HorizontalLabelPositionBelowStepper(props) {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const steps = getSteps();\r\n    const form = useFormContext();\r\n    const {handleSubmit, clearErrors} = form;\r\n\r\n\r\n    const handleNext = () => {\r\n        const onSuccess = data => {\r\n            clearErrors();\r\n\r\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n        }\r\n        handleSubmit(onSuccess)();\r\n    };\r\n\r\n    const handleBack = () => {\r\n        clearErrors();\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n    const onSubmit = async data => {\r\n        //edit mode change endpoint\r\n        console.log(data);\r\n        data.questionaryQuestions.forEach(question => question.questionaryAnswerOptions.forEach(option => option.selectableAnswerId = Number(option.selectableAnswerId)));\r\n\r\n        const basePath = getBasePath(props.getAllRoute);\r\n\r\n        const response = await fetch(basePath + \"/api/QuestionaryApi\", {\r\n            method: props.questionary ? \"PUT\" : \"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            credentials: \"include\",\r\n            body: JSON.stringify(data)\r\n        })\r\n\r\n        if (response.ok) {\r\n            window.location = props.getAllRoute;\r\n        }\r\n\r\n    };\r\n    const companyId = form.watch('companyId');\r\n    const company: { id: number, name: string } = props.companies?.find(company => company.id.toString() == companyId);\r\n\r\n    const objectTypeId = form.watch('objectTypeId');\r\n    const objectType = props.objectTypes?.find(o => o.id == objectTypeId);\r\n\r\n    const objectsIdToChangeType = form.watch('objectsIdToChangeType');\r\n    \r\n    const ifQuestionaryCurrentInCompany = form.watch('ifQuestionaryCurrentInCompany');\r\n    console.log(\"ifQuestionaryCurrentInCompany\",ifQuestionaryCurrentInCompany)\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            {(ifQuestionaryCurrentInCompany && props.originObjectTypeId == objectTypeId)? <div className=\"alert alert-warning\" role=\"alert\">\r\n                Уже существует активная анкета для типа объекта \"{objectType?.name}\"!\r\n            </div> : null}\r\n            \r\n            <div className=\"d-flex justify-content-center\">\r\n                {company?.name && <div className=\"d-flex justify-content-start col-3 text-truncate mr-1 \"><h6\r\n                    style={{color: '#3f51b5'}}>Компания: </h6>&nbsp;\r\n                    <Tooltip title={company?.name} placement=\"bottom-start\">\r\n                        <h6 className=\"font-weight-light\" style={{color: '#3f51b5'}}> {company?.name}</h6>\r\n                    </Tooltip>\r\n                </div>}\r\n                {objectType?.name && <div className=\"d-flex justify-content-start col-3 text-truncate mr-1\"><h6\r\n                    style={{color: '#3f51b5'}}>Тип объекта: </h6>&nbsp;\r\n                    <Tooltip title={objectType?.name} placement=\"bottom-start\">\r\n                        <h6 className=\"font-weight-light\" style={{color: '#3f51b5'}}> {objectType?.name}</h6>\r\n                    </Tooltip>\r\n                </div>}\r\n                {objectsIdToChangeType?.length ? <div className=\"d-flex justify-content-start col-2 text-truncate\">\r\n                    <h6 style={{color: '#3f51b5'}}>Выбрано объектов: </h6>&nbsp;\r\n                    <h6 className=\"font-weight-light\" style={{color: '#3f51b5'}}> {objectsIdToChangeType?.length}</h6>\r\n                </div> : null}\r\n            </div>\r\n            <Stepper activeStep={activeStep} alternativeLabel>\r\n                {steps.map((label) => (\r\n                    <Step key={label}>\r\n                        <StepLabel>{label}</StepLabel>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            <div>\r\n                {activeStep === steps.length ? (\r\n                    <div>\r\n                        <Typography className={classes.instructions}>All steps completed</Typography>\r\n                        <Button onClick={handleReset}>Reset</Button>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <Typography\r\n                            className={classes.instructions}>{getStepContent(\r\n                            activeStep,\r\n                            form,\r\n                            props.questionary,\r\n                            props.getAllRoute,\r\n                            props.objectTypes,\r\n                            props.setObjectTypes,\r\n                            props.companies,\r\n                            props.selectableAnswersLists,\r\n                            props.questionaryInputFieldTypes,\r\n                            props.selectableAnswers,\r\n                            props.setObjectTypeId,\r\n                            props.originObjectTypeId\r\n                        )}</Typography>\r\n                        <div>\r\n                            <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={handleBack}\r\n                                className={`${classes.backButton}`}\r\n                                variant=\"contained\"\r\n                            >\r\n                                Назад\r\n                            </Button>\r\n                            {activeStep === steps.length - 1 ?\r\n                                <Button className=\"ml-50\" onClick={handleSubmit(onSubmit)} variant=\"contained\"\r\n                                        color=\"primary\">\r\n                                    Сохранить\r\n                                </Button> :\r\n                                <Button className=\"ml-50\" variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                                    Вперед\r\n                                </Button>}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface Company {\r\n    companyId: number;\r\n    companyName: string;\r\n}\r\n\r\nfunction App(props: { questionary?: any, getAllRoute: string }) {\r\n\r\n    debugger;\r\n    const form = useForm({shouldUnregister: false, defaultValues: props.questionary});\r\n    const {register, handleSubmit} = form;\r\n\r\n    const [objectTypes, setObjectTypes] = React.useState<SelectOption[]>([]);\r\n    const [companies, setCompanies] = React.useState<SelectOption[]>([]);\r\n    const [selectableAnswersLists, setSelectableAnswersLists] = React.useState<SelectOption[]>([]);\r\n    const [questionaryInputFieldTypes, setQuestionaryInputFieldTypes] = React.useState<QuestionaryInputFieldTypes[]>([]);\r\n    const [selectableAnswers, setSelectableAnswers] = React.useState<SelectOption[]>([]);\r\n    const [companyId, setCompanyId] = React.useState<number>(0);\r\n    const [objectTypeId, setObjectTypeId] = React.useState<number>(0);\r\n    const [originObjectTypeId, setOriginObjectTypeId] = React.useState<number>(0);\r\n\r\n    React.useEffect(() => {\r\n        (async () => {\r\n\r\n            const getSelectOptions = async () => {\r\n                if (props.questionary)\r\n                    return props.questionary;\r\n\r\n                const basePath = getBasePath(props.getAllRoute);\r\n\r\n                const response = await fetch(basePath + \"/api/QuestionaryApi\", {\r\n                    method: \"Get\",\r\n                    headers: {\"Accept\": \"application/json\"},\r\n                    credentials: \"include\"\r\n                });\r\n\r\n                if (response.ok) {\r\n                    return await response.json();\r\n                }\r\n            }\r\n\r\n            const selectOptions = await getSelectOptions();\r\n\r\n            if (!selectOptions) {\r\n                //todo show a popup with error\r\n                return;\r\n            }\r\n\r\n            let originObjectTypeId = form.watch('objectTypeId');\r\n            setOriginObjectTypeId(originObjectTypeId);\r\n            \r\n            let companyId = form.watch('companyId');\r\n            setCompanyId(companyId);\r\n            \r\n            let objectTypeId = form.watch('objectTypeId');\r\n            setObjectTypeId(objectTypeId);\r\n\r\n            let objTypes: SelectOption[] = selectOptions.questionaryObjectTypes;\r\n            setObjectTypes(objTypes);\r\n\r\n            let companies: SelectOption[] = selectOptions.applicationCompanies.map(company => ({\r\n                id: company.companyId,\r\n                name: company.companyName\r\n            }));\r\n            setCompanies(companies);\r\n\r\n            let answersList: SelectOption[] = selectOptions.selectableAnswersLists;\r\n            setSelectableAnswersLists(answersList);\r\n\r\n            let inputFieldTypes: QuestionaryInputFieldTypes[] = selectOptions.questionaryInputFieldTypes;\r\n            setQuestionaryInputFieldTypes(inputFieldTypes);\r\n\r\n            let answers: SelectableAnswers[] = selectOptions.selectableAnswers.map(answer => ({\r\n                name: answer.answerText,\r\n                id: answer.id,\r\n                selectableAnswersListId: answer.selectableAnswersListId\r\n            }));\r\n\r\n            setSelectableAnswers(answers);\r\n\r\n        })()\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <form autoComplete=\"off\">\r\n                <FormProvider {...form}>\r\n                    <HorizontalLabelPositionBelowStepper\r\n                        questionary={props.questionary}\r\n                        getAllRoute={props.getAllRoute}\r\n                        objectTypes={objectTypes}\r\n                        setObjectTypes={setObjectTypes}\r\n                        companies={companies}\r\n                        selectableAnswersLists={selectableAnswersLists}\r\n                        questionaryInputFieldTypes={questionaryInputFieldTypes}\r\n                        selectableAnswers={selectableAnswers}\r\n                        companyId={companyId}\r\n                        setObjectTypeId={setObjectTypeId}\r\n                        originObjectTypeId={originObjectTypeId}\r\n                    />\r\n                </FormProvider>\r\n            </form>\r\n            <CloseAlertDialog\r\n                getAllRoute={props.getAllRoute}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Log = (a) => {\r\n    console.log(a);\r\n    return a;\r\n}\r\nconst renderReact = (getAllRoute: string, questionary = undefined) => ReactDOM.render(<App getAllRoute={getAllRoute}\r\n                                                                                           questionary={questionary}/>, document.getElementById('reactRoot'));"],"file":"App.js"}