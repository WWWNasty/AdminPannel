{"version":3,"sources":["../../../ReactApp/src/App.tsx"],"names":["colors","CssBaseline","ThemeProvider","Typography","Container","makeStyles","createMuiTheme","Box","SvgIcon","Link","Stepper","Step","StepButton","Button","InputLabel","FormControl","FormHelperText","Select","MenuItem","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","Input","Chip","Checkbox","ListItemText","ListSubheader","DialogActions","Card","CardContent","CardActions","FormControlLabel","Icon","List","ListItem","ListItemIcon","IconButton","ListItemSecondaryAction","RootRef","Switch","Accordion","AccordionSummary","AccordionDetails","Theme","createStyles","FormGroup","Slide","StepLabel","Collapse","Snackbar","MaterialUI","DragDropContext","Draggable","Droppable","ReactBeautifulDnd","useState","React","useForm","Controller","useFormContext","FormProvider","useFieldArray","ReactHookForm","console","log","useStyles","theme","root","width","button","marginRight","spacing","backButton","completed","display","instructions","marginTop","marginBottom","getSteps","getStepContent","step","form","questionary","getAllRoute","objectTypes","setObjectTypes","companies","setCompanies","selectableAnswersLists","setSelectableAnswersLists","questionaryInputFieldTypes","setQuestionaryInputFieldTypes","selectableAnswers","setSelectableAnswers","useEffect","getSelectOptions","basePath","getBasePath","response","fetch","method","headers","credentials","ok","json","selectOptions","objTypes","questionaryObjectTypes","applicationCompanies","map","company","id","companyId","name","companyName","answersList","inputFieldTypes","answers","answer","answerText","selectableAnswersListId","selectedObjectTypeId","watch","selectedObjectype","find","ot","allRouteParts","split","slice","length","join","trim","HorizontalNonLinearStepperWithError","props","classes","activeStep","setActiveStep","steps","handleSubmit","isStepFailed","handleNext","newSkipped","skipped","isStepSkipped","Set","values","delete","prevActiveStep","setSkipped","onSuccess","data","clearErrors","handleBack","handleReset","onSubmit","questionaryQuestions","forEach","question","questionaryAnswerOptions","option","selectableAnswerId","Number","body","JSON","stringify","window","location","label","App","shouldUnregister","defaultValues","register","Log","a","renderReact","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","sourcesContent":["﻿declare const MaterialUI;\r\ndeclare const ReactBeautifulDnd;\r\ndeclare const ReactHookForm;\r\ndeclare const yup;\r\n\r\n\r\nconst {\r\n    colors,\r\n    CssBaseline,\r\n    ThemeProvider,\r\n    Typography,\r\n    Container,\r\n    makeStyles,\r\n    createMuiTheme,\r\n    Box,\r\n    SvgIcon,\r\n    Link,\r\n    Stepper,\r\n    Step,\r\n    StepButton,\r\n    Button,\r\n    InputLabel,\r\n    FormControl,\r\n    FormHelperText,\r\n    Select,\r\n    MenuItem,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    TextField,\r\n    Input,\r\n    Chip,\r\n    Checkbox,\r\n    ListItemText,\r\n    ListSubheader,\r\n    DialogActions,\r\n    Card,\r\n    CardContent,\r\n    CardActions,\r\n    FormControlLabel,\r\n    Icon,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    IconButton,\r\n    ListItemSecondaryAction,\r\n    RootRef,\r\n    Switch,\r\n    Accordion,\r\n    AccordionSummary,\r\n    AccordionDetails,\r\n    Theme,\r\n    createStyles,\r\n    FormGroup,\r\n    Slide,\r\n    StepLabel,\r\n    Collapse,\r\n    Snackbar\r\n} = MaterialUI;\r\n\r\nconst {DragDropContext, Draggable, Droppable} = ReactBeautifulDnd;\r\nconst {useState} = React;\r\nconst {useForm, Controller, useFormContext, FormProvider, useFieldArray} = ReactHookForm;\r\n\r\n\r\nconsole.log(useFormContext);\r\nconsole.log(FormProvider);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '95%',\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    completed: {\r\n        display: 'inline-block',\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction getSteps() {\r\n    return ['Выбор типа объекта', 'Выбор объекта', 'Создание анкеты'];\r\n}\r\n\r\nfunction getStepContent(step: number, form: any, questionary: any, getAllRoute: string) {\r\n    const [objectTypes, setObjectTypes] = React.useState<SelectOption[]>([]);\r\n    const [companies, setCompanies] = React.useState<SelectOption[]>([]);\r\n    const [selectableAnswersLists, setSelectableAnswersLists] = React.useState<SelectOption[]>([]);\r\n    const [questionaryInputFieldTypes, setQuestionaryInputFieldTypes] = React.useState<QuestionaryInputFieldTypes[]>([]);\r\n    const [selectableAnswers, setSelectableAnswers] = React.useState<SelectOption[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        (async () => {\r\n\r\n            const getSelectOptions = async () => {\r\n                if (questionary)\r\n                    return questionary;\r\n                \r\n                const basePath = getBasePath(getAllRoute);\r\n                \r\n                const response = await fetch(basePath + \"/api/QuestionaryApi\", {\r\n                    method: \"Get\",\r\n                    headers: {\"Accept\": \"application/json\"},\r\n                    credentials: \"include\"\r\n                });\r\n\r\n                if (response.ok) {\r\n                    return await response.json();\r\n                }\r\n            }\r\n\r\n            const selectOptions = await getSelectOptions();\r\n\r\n            if(!selectOptions){\r\n                //todo show a popup with error\r\n                return;\r\n            }\r\n            \r\n            let objTypes: SelectOption[] = selectOptions.questionaryObjectTypes;\r\n            setObjectTypes(objTypes);\r\n\r\n            let companies: SelectOption[] = selectOptions.applicationCompanies.map(company => ({\r\n                id: company.companyId,\r\n                name: company.companyName\r\n            }));\r\n            setCompanies(companies);\r\n\r\n            let answersList: SelectOption[] = selectOptions.selectableAnswersLists;\r\n            setSelectableAnswersLists(answersList);\r\n\r\n            let inputFieldTypes: QuestionaryInputFieldTypes[] = selectOptions.questionaryInputFieldTypes;\r\n            setQuestionaryInputFieldTypes(inputFieldTypes);\r\n\r\n            let answers: SelectableAnswers[] = selectOptions.selectableAnswers.map(answer => ({\r\n                name: answer.answerText,\r\n                id: answer.id,\r\n                selectableAnswersListId: answer.selectableAnswersListId\r\n            }));\r\n\r\n            setSelectableAnswers(answers);\r\n            \r\n        })()\r\n    }, []);\r\n\r\n    const selectedObjectTypeId = form.watch('objectTypeId');\r\n    const selectedObjectype = objectTypes.find(ot => ot.id == selectedObjectTypeId)\r\n\r\n    switch (step) {\r\n        case 0:\r\n            return <FirstStep\r\n                setObjectTypes={setObjectTypes}\r\n                selectOptionsTypes={objectTypes}\r\n                selectOptionsСompanies={companies}\r\n            />;\r\n        case 1:\r\n            return <SecondStep\r\n                form={form}\r\n                selectOptions={objectTypes}\r\n                selectedObjectype={selectedObjectype}\r\n            />;\r\n        case 2:\r\n            return <ThirdStep\r\n                form={form}\r\n                selectableAnswersLists={selectableAnswersLists}\r\n                questionaryInputFieldTypes={questionaryInputFieldTypes}\r\n                selectableAnswers={selectableAnswers}\r\n            />;\r\n        default:\r\n            return 'Unknown step';\r\n    }\r\n}\r\n\r\nfunction getBasePath(getAllRoute: string) {\r\n    const allRouteParts = getAllRoute.split('/');\r\n    const basePath = allRouteParts.slice(0, allRouteParts.length - 2).join('/').trim();\r\n    return basePath;\r\n}\r\n\r\n//альтернативный степер без возможности свободного перехода по вкладкам с работой валидации\r\n// function HorizontalLabelPositionBelowStepper(props) {\r\n//     const classes = useStyles();\r\n//     const [activeStep, setActiveStep] = React.useState(0);\r\n//     const steps = getSteps();\r\n//     const form = useFormContext();\r\n//     const {handleSubmit} = form;\r\n//\r\n//\r\n//     const handleNext = () => {\r\n//         const onSuccess = data => {\r\n//             form.clearErrors();\r\n//\r\n//             setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n//         }\r\n//         handleSubmit(onSuccess)();\r\n//     };\r\n//\r\n//     const handleBack = () => {\r\n//         const onSuccess = data => {\r\n//             form.clearErrors();\r\n//\r\n//             setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n//         }\r\n//         handleSubmit(onSuccess)();\r\n//\r\n//     };\r\n//\r\n//     const handleReset = () => {\r\n//         setActiveStep(0);\r\n//     };\r\n//     const onSubmit = async data => {\r\n//         //edit mode change endpoint\r\n//         console.log(data);\r\n//         data.questionaryQuestions.forEach(question => question.questionaryAnswerOptions.forEach(option => option.selectableAnswerId = Number(option.selectableAnswerId)));\r\n//\r\n//         const basePath = getBasePath(props.getAllRoute);\r\n//\r\n//         const response = await fetch(basePath + \"/api/QuestionaryApi\", {\r\n//             method: props.questionary ? \"PUT\" : \"POST\",\r\n//             headers: {\"Content-Type\": \"application/json\"},\r\n//             credentials: \"include\",\r\n//             body: JSON.stringify(data)\r\n//         })\r\n//\r\n//         if (response.ok) {\r\n//             window.location = props.getAllRoute;\r\n//         }\r\n//\r\n//     };\r\n//\r\n//     return (\r\n//         <div className={classes.root}>\r\n//             <Stepper activeStep={activeStep} alternativeLabel>\r\n//                 {steps.map((label) => (\r\n//                     <Step key={label}>\r\n//                         <StepLabel>{label}</StepLabel>\r\n//                     </Step>\r\n//                 ))}\r\n//             </Stepper>\r\n//             <div>\r\n//                 {activeStep === steps.length ? (\r\n//                     <div>\r\n//                         <Typography className={classes.instructions}>All steps completed</Typography>\r\n//                         <Button onClick={handleReset}>Reset</Button>\r\n//                     </div>\r\n//                 ) : (\r\n//                     <div>\r\n//                         <Typography\r\n//                             className={classes.instructions}>{getStepContent(activeStep, form, props.questionary, props.getAllRoute)}</Typography>\r\n//                         <div>\r\n//                             <Button\r\n//                                 disabled={activeStep === 0}\r\n//                                 onClick={handleBack}\r\n//                                 className={`${classes.backButton}`}\r\n//                                 variant=\"contained\"\r\n//                             >\r\n//                                 Назад\r\n//                             </Button>\r\n//                             {activeStep === steps.length - 1 ?\r\n//                                 <Button className=\"ml-50\" onClick={handleSubmit(onSubmit)} variant=\"contained\" color=\"primary\">\r\n//                                     Сохранить\r\n//                                 </Button> :\r\n//                                 <Button className=\"ml-50\" variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n//                                     Вперед\r\n//                                 </Button>}\r\n//                         </div>\r\n//                     </div>\r\n//                 )}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n//альтернативный степер без возможности свободного перехода по вкладкам с работой валидации\r\nfunction HorizontalNonLinearStepperWithError(props) {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const steps = getSteps();\r\n    const form = useFormContext();\r\n    const {handleSubmit} = form;\r\n\r\n    const isStepFailed = (step: number) => {\r\n        return step === 1;\r\n    };\r\n\r\n    const handleNext = () => {\r\n        let newSkipped = skipped;\r\n        if (isStepSkipped(activeStep)) {\r\n            newSkipped = new Set(skipped.values());\r\n            newSkipped.delete(activeStep);\r\n        }\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n        setSkipped(newSkipped);\r\n        \r\n        const onSuccess = data => {\r\n            form.clearErrors();\r\n\r\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n        }\r\n        handleSubmit(onSuccess)();\r\n    };\r\n\r\n    const handleBack = () => {\r\n        const onSuccess = data => {\r\n            form.clearErrors();\r\n\r\n            setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n        }\r\n        handleSubmit(onSuccess)();\r\n        \r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n    const onSubmit = async data => {\r\n        //edit mode change endpoint\r\n        console.log(data);\r\n        data.questionaryQuestions.forEach(question => question.questionaryAnswerOptions.forEach(option => option.selectableAnswerId = Number(option.selectableAnswerId)));\r\n\r\n        const basePath = getBasePath(props.getAllRoute);\r\n\r\n        const response = await fetch(basePath + \"/api/QuestionaryApi\", {\r\n            method: props.questionary ? \"PUT\" : \"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            credentials: \"include\",\r\n            body: JSON.stringify(data)\r\n        })\r\n\r\n        if (response.ok) {\r\n            window.location = props.getAllRoute;\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Stepper activeStep={activeStep} alternativeLabel>\r\n                {steps.map((label) => (\r\n                    <Step key={label}>\r\n                        <StepLabel>{label}</StepLabel>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            <div>\r\n                {activeStep === steps.length ? (\r\n                    <div>\r\n                        <Typography className={classes.instructions}>All steps completed</Typography>\r\n                        <Button onClick={handleReset}>Reset</Button>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <Typography\r\n                            className={classes.instructions}>{getStepContent(activeStep, form, props.questionary, props.getAllRoute)}</Typography>\r\n                        <div>\r\n                            <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={handleBack}\r\n                                className={`${classes.backButton}`}\r\n                                variant=\"contained\"\r\n                            >\r\n                                Назад\r\n                            </Button>\r\n                            {activeStep === steps.length - 1 ?\r\n                                <Button className=\"ml-50\" onClick={handleSubmit(onSubmit)} variant=\"contained\" color=\"primary\">\r\n                                    Сохранить\r\n                                </Button> :\r\n                                <Button className=\"ml-50\" variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                                    Вперед\r\n                                </Button>}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction App(props: { questionary?: any, getAllRoute: string }) {\r\n\r\n    console.log(props.questionary);\r\n\r\n    const form = useForm({shouldUnregister: false, defaultValues: props.questionary});\r\n    const {register, handleSubmit} = form;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form autoComplete=\"off\">\r\n                <FormProvider {...form}>\r\n                    <HorizontalLabelPositionBelowStepper \r\n                        questionary={props.questionary}\r\n                        getAllRoute={props.getAllRoute}\r\n                    />\r\n                </FormProvider>\r\n            </form>\r\n            <CloseAlertDialog\r\n                getAllRoute={props.getAllRoute}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nconst Log = (a) => {\r\n    console.log(a);\r\n    return a;\r\n}\r\nconst renderReact = (getAllRoute: string, questionary = undefined) => ReactDOM.render(<App getAllRoute={getAllRoute}\r\n                                                                                           questionary={questionary}/>, document.getElementById('reactRoot'));"],"file":"App.js"}